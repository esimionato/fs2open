cmake_minimum_required(VERSION 2.6)

PROJECT( fsopen )


SET(CMAKE_MODULE_PATH
	${CMAKE_SOURCE_DIR}/cmake
)

INCLUDE(DefineCompilerFlags)
INCLUDE(DefineGameOptions)
INCLUDE(DefineCPackGenerators)

#set default output path after build
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR}/build)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR}/build)

IF(UNIX)
	ADD_DEFINITIONS(-DSCP_UNIX)
	ADD_DEFINITIONS(-DUSE_OPENAL)
ENDIF(UNIX)
IF(WIN32)
	ADD_DEFINITIONS(-D_WIN32)
ENDIF(WIN32)

#configure required libraries & compile
FIND_PACKAGE(SDL REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)
IF(NOT NO_SOUND)
	FIND_PACKAGE(OpenAL REQUIRED)
ENDIF(NOT NO_SOUND)
IF(JPEG_STATIC)
	ADD_SUBDIRECTORY(libjpeg)
ELSE(JPEG_STATIC)
	FIND_PACKAGE(JPEG REQUIRED)
	IF(NOT JPEG_FOUND)
		ADD_SUBDIRECTORY(libjpeg)
	ENDIF(NOT JPEG_FOUND)
ENDIF(JPEG_STATIC)

ADD_SUBDIRECTORY(lua)
ADD_SUBDIRECTORY(code)

MESSAGE( STATUS )
MESSAGE( STATUS "-------------------------------------------------------------------------------" )
MESSAGE( STATUS "CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}" )
MESSAGE( STATUS "CMAKE_BUILD_TYPE = ${CMAKE_BUILD_TYPE}" )
MESSAGE( STATUS "Change a value with: cmake -D<Variable>=<Value>" )
MESSAGE( STATUS "Package CPACK_GENERATOR=${CPACK_GENERATOR}" )
MESSAGE( STATUS "-------------------------------------------------------------------------------" )
MESSAGE( STATUS )
